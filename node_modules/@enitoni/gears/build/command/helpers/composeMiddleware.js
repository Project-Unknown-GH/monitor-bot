"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const helpers_1 = require("../../core/helpers");
/**
 * @ignore
 */
exports.composeMiddleware = (chain) => (context, next) => __awaiter(this, void 0, void 0, function* () {
    let index = -1;
    const run = (i) => __awaiter(this, void 0, void 0, function* () {
        helpers_1.assert(index < i, "Do not call next() more than once");
        index = i;
        let middleware = chain[i];
        /** No more middleware left */
        if (chain.length === i)
            middleware = next;
        if (middleware) {
            return middleware(context, () => run(i + 1));
        }
        else {
            return;
        }
    });
    return run(0);
});
//# sourceMappingURL=composeMiddleware.js.map
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Match when the provided regular expression matches, adds match array to [[Context]] state.
 * @example
 * matchRegex(/^[Hh]elp( me)?!?$/)
 *
 * // Matching: "Help!"
 * // Matching: "help me"
 * // Not matching: "Please help me"
 * @category Matching
 */
exports.matchRegex = (regex) => (context) => __awaiter(this, void 0, void 0, function* () {
    const match = (typeof regex === "function" ? regex() : regex).exec(context.content);
    if (!match)
        return;
    return Object.assign({}, context, { state: { match } });
});
//# sourceMappingURL=matchRegex.js.map
import * as Gears from "@enitoni/gears";
import { Client, ClientOptions, Message } from "discord.js";
export interface AdapterOptions extends ClientOptions {
    token: string;
    listenToSelf?: boolean;
}
export declare class Adapter extends Gears.ClientAdapter<Message, Client, AdapterOptions> {
    protected register(options: AdapterOptions, hooks: Gears.AdapterHooks<Message>): {
        client: Client;
        methods: {
            start: () => Promise<void>;
            getMessageContent: (message: Message) => string;
        };
    };
}
export declare type Context<S extends object = {}> = Gears.Context<S, Message, Client>;
export declare type Matcher<S extends object = {}> = Gears.Matcher<S, Message, Client>;
export declare type Middleware<S extends object = {}> = Gears.Middleware<S, Message, Client>;
export declare class Command<D = unknown> extends Gears.Command<Message, Client, D> {
}
export declare class CommandGroup<D = unknown> extends Gears.CommandGroup<Message, Client, D> {
}
export declare class CommandBuilder<D = unknown> extends Gears.CommandBuilder<Message, Client, D> {
}
export declare class CommandGroupBuilder<D = unknown> extends Gears.CommandGroupBuilder<Message, Client, D> {
}
export declare class Service extends Gears.Service<Message, Client> {
}
export * from "./matchers";
export * from "./services";
